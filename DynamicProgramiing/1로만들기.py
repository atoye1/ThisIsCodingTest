n = int(input())
# 정수가 주어졌을때 정수를 최소한의 연산을 통해 1로 만드는 것
memo = [0] * (n + 1)
'''
아이디어는 다음과 같다.
0. 다이나믹 프로그래밍 문제임을 파악한다.
1. 점화식을 세워야 한다.
2. top-down 방식과 botton-up 방식중 하나를 선택해서 풀이한다.
3. 점화식은 최솟값이다. 
'''

for i in range(2, n + 1):
    # 현재의 수에서 1을 빼는 경우에 계산 횟수는 다음과 같다.
    memo[i] = memo[i - 1] + 1
    # 현재의 수가 2로 나누어 떨어지는 경우는
    if i % 2 == 0:
        # 저장되어 있는 경우와 비교해서 작은 것을 선택한다.
        memo[i] = min(memo[i], memo[i // 2] + 1)
    if i % 3 == 0:
        memo[i] = min(memo[i], memo[i // 3] + 1)
    if i % 5 == 0:
        memo[i] = min(memo[i], memo[i // 5] + 1)
    print(i, memo)
# 반복문을 다 돌면 숫자가 x인 경우에 최소연산횟수가 저장된 메모가 생성된다.
# 따라서 해당 배열에서 값을 찾아 출력해주면 된다.
print(memo[n])
